version: 2.1
orbs:
  node: circleci/node@5.1.0
  browser-tools: circleci/browser-tools@1.3.0
commands:
  build_and_install:
    description: All steps used to build and install. Will use cache if found
    parameters:
      node-version:
        type: string
    steps:
      - checkout
      - restore_cache_cmd:
          node-version: << parameters.node-version >>
      - node/install:
          node-version: << parameters.node-version >>
      - run: npm install --no-audit --progress=false
  restore_cache_cmd:
    description: Custom command for restoring cache with the ability to bust cache.
      When BUST_CACHE is set to true, jobs will not restore cache
    parameters:
      node-version:
        type: string
    steps:
      - when:
          condition:
            equal:
              - false
              - << pipeline.parameters.BUST_CACHE >>
          steps:
            - restore_cache:
                key: deps--{{ arch }}--{{ .Branch }}--<< parameters.node-version >>--{{ checksum
                  "package.json" }}-{{ checksum ".circleci/config.yml" }}
  save_cache_cmd:
    description: Custom command for saving cache.
    parameters:
      node-version:
        type: string
    steps:
      - save_cache:
          key: deps--{{ arch }}--{{ .Branch }}--<< parameters.node-version >>--{{ checksum
            "package.json" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - ~/.npm
            - node_modules
  generate_and_store_version_and_filesystem_artifacts:
    description: Track important packages and files
    steps:
      - run: >
          [[ $EUID -ne 0 ]] && (sudo mkdir -p /tmp/artifacts && sudo chmod 777
          /tmp/artifacts) || (mkdir -p /tmp/artifacts && chmod 777
          /tmp/artifacts)

          printenv NODE_ENV >> /tmp/artifacts/NODE_ENV.txt || true

          npm -v >> /tmp/artifacts/npm-version.txt

          node -v >> /tmp/artifacts/node-version.txt

          ls -latR >> /tmp/artifacts/dir.txt
      - store_artifacts:
          path: /tmp/artifacts/
  generate_e2e_code_cov_report:
    description: Generate e2e code coverage artifacts and publish to codecov.io.
      Needed to that we can ignore the exit code status of the npm run test
    parameters:
      suite:
        type: string
    steps:
      - run: npm run cov:e2e:report || true
      - run: npm run cov:e2e:<<parameters.suite>>:publish
jobs:
  cci-agent-setup:
    parameters:
      node-version:
        type: string
    executor: pw-focal-development
    steps: []
workflows:
  cci-agent-setup:
    jobs:
      - cci-agent-setup
